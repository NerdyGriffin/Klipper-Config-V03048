[include mainsail.cfg]
[include moonraker_obico_macros.cfg]
[include timelapse.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.2 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Motor currents                                                               [extruder] [stepper] and [_HOME_X/Y] macro sections
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45503571290DBB58-if00
restart_method: command


[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 25000 # Input shaper recommended max x: 17820 max y: 8070
max_z_velocity: 50          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 500
# square_corner_velocity: 5.0

[include autotune.cfg]

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 80                                                    # for sensorless homing with tmc autotune homing_speed should be numerically greater than rotation_distance
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: true
run_current: 1.0
sense_resistor: 0.110
diag_pin: ^gpio4                                                    # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK
# driver_SGTHRS: 60 # Klipper TMC Autotune overrides this setting     # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 80                                                    # for sensorless homing with tmc autotune homing_speed should be numerically greater than rotation_distance
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: true
run_current: 1.0
sense_resistor: 0.110
diag_pin: ^gpio3                                                    # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK
# driver_SGTHRS: 60 # Klipper TMC Autotune overrides this setting     # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 64
endstop_pin: probe:z_virtual_endstop
position_max: 120
position_min: -1.5
homing_speed: 20 # Use 10 for PZ Probe
second_homing_speed: 2
homing_retract_dist: 2


[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: true
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A
run_current: 0.2
## For LDO-42STH25-1004CL200E 1.0A
#run_current: 0.37
sense_resistor: 0.110

#####################################################################
#   Extruder
#####################################################################

[extruder]
# 2024 Motor Model: LDO 36STH20-1004AHG(XH)
step_pin: nhk:gpio23                                                # LDO Nitehawk overrides this setting
dir_pin: !nhk:gpio24                                                # LDO Nitehawk overrides this setting
enable_pin: !nhk:gpio25                                             # LDO Nitehawk overrides this setting
full_steps_per_rotation: 200                                        # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
# Note: a higher rotation_distance value means that less filament is being extruded.
# rotation_distance: 22.40                                            # See calibrating rotation_distance on extruders doc.
# rotation_distance: 47.088 #Galileo 2 16mm Drive Gear
rotation_distance: 47.088 # Calibrated 2025-02-11
# gear_ratio: 50:10                                                   # For Mini Afterburner
gear_ratio: 9:1                                                     # For Galileo 2
microsteps: 64
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: nhk:gpio9                                               # LDO Nitehawk overrides this setting
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio29                                              # LDO Nitehawk overrides this setting
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 10
max_temp: 300                                                       # Default: 270
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 5                                        # Required for KAMP
# max_extrude_only_velocity: 50
# Default = ( 16 * printer.toolhead.max_velocity * ( nozzle_diameter^2 ) )
#             /
#           ( pi * ( filament_diameter^2 ) )
##  Try to keep pressure_advance below 1.0
# pressure_advance: 0.02 # Tuned 2023
pressure_advance: 0.004 # Tuned 2025
pressure_advance_smooth_time: 0.02 # Recommended 2025-02-19

[tmc2209 extruder]
uart_pin: nhk:gpio0                                                 # LDO Nitehawk overrides this setting
tx_pin: nhk:gpio1                                                   # LDO Nitehawk overrides this setting
interpolate: true                                                   # LDO Nitehawk overrides this setting
run_current: 0.6 # 0.6 for Galileo 2
sense_resistor: 0.110                                               # LDO Nitehawk overrides this setting

# Workaround for 2024-06 heating issues.
#[verify_heater extruder]
#max_error: 240 # default 120

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: ATC Semitec 104GT-2
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120                                                       # Default: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#   Probe
#####################################################################

[probe]
#with Long Klicky Probe
pin: nhk:gpio13                                                     # LDO Nitehawk overrides this setting
x_offset: 9.5
y_offset: 0
#z_offset: 14.5
#z_offset 2024-05-22 ABS: 13.530
#z_offset 2024-05-22 Nylon: 13.510
#z_offset 2024-06-04 Nylon: 13.470
#z_offset 2024-06-06 PLA: 13.510
#z_offset 2024-06-19 PLA: 13.490
#z_offset 2024-07-18 Nylon: 13.405
#z_offset 2024-07-25 PLA: 13.480
#z_offset 2024-08-02 ABS: 13.540
#z_offset 2024-12-09 PETG: 13.530
#z_offset 2024-12-12 TPU: 13.410
#z_offset 2024-12-18 ABS: 13.530
#z_offset 2025-02-07 ABS: 13.560 # Toolhead rebuild
speed: 2 # default: 5.0
lift_speed: 20
samples: 3
samples_result: median
#sample_retract_dist: 2 # default: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 10

#### Uncomment this when setting up Revo PZ Probe
# activate_gcode:
#     {% set PROBE_TEMP = 150 %}
#     {% set MAX_TEMP = PROBE_TEMP + 5 %}
#     {% set ACTUAL_TEMP = printer.extruder.temperature %}
#     {% set TARGET_TEMP = printer.extruder.target %}

#     {% if TARGET_TEMP > PROBE_TEMP %}
#         { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#         M117 { 'Cooling to %.1fC...' % (PROBE_TEMP) }
#         M109 S{ PROBE_TEMP }
#         M117 Probing...
#     {% elif ACTUAL_TEMP > MAX_TEMP %}
#         # Temperature target is already low enough, but nozzle may still be too hot.
#         { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#         M117 { 'Waiting until temperature is below %.1fC...' % (MAX_TEMP) }
#         TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#         M117 Probing...
#     {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - Nitehawk PCF (Formerly FAN1)
pin: nhk:gpio6                                                      # LDO Nitehawk overrides this setting
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - Nitehawk HEF (Formerly FAN2)
pin: nhk:gpio5                                                      # LDO Nitehawk overrides this setting
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[heater_fan bed_fan]
##  Bed Heater Fan - FAN1
pin: gpio17
shutdown_speed: 0.0
kick_start_time: 0.5
heater: heater_bed
heater_temp: 60
fan_speed: 0.2

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: gpio18
kick_start_time: 0.5
heater: heater_bed

[heater_fan filter_fan]
##  Nevermore filter fan - FAN3
pin: gpio20
shutdown_speed: 0.0
kick_start_time: 5.0
heater: extruder, heater_bed
heater_temp: 40
fan_speed: 0.2

#####################################################################
#   LED Control
#####################################################################

[neopixel bed_light]
## RGB light installed on bed mount
pin: gpio24
chain_count: 1
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

# [neopixel camera_light]
# ## RGB light installed on bed mount
# pin: gpio29
# chain_count: 7
# color_order: GRBW
# initial_RED: 0.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0
# initial_WHITE: 0.5

[include neopixel-placeholder.cfg]

[include led-effects.cfg]

######################################################################
# Beeper
######################################################################

[include beeper.cfg]

#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor switch_sensor]
switch_pin: gpio16
pause_on_runout: False
runout_gcode:
    {% if not printer.pause_resume.is_paused %}
        PAUSE # [pause_resume] is required in printer.cfg
    {% endif %}
    M117 Filament runout (switch)
insert_gcode:
    M117 Filament inserted (switch)

[filament_motion_sensor encoder_sensor]
switch_pin: gpio25
detection_length: 20 ; This can be adjusted to your desired level of sensitivity. 10 is a recommended value to prevent flow dropoff false triggers. BTT default is 2.88. 2024 tune: 18
extruder: extruder
pause_on_runout: False ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below.
runout_gcode:
    {% if not printer.pause_resume.is_paused %}
        PAUSE # [pause_resume] is required in printer.cfg
    {% endif %}
    M117 Filament runout (encoder)
insert_gcode:
    M117 Filament inserted (encoder)

#####################################################################
#   Additional Sensors
#####################################################################

[temperature_sensor chamber]
## Chamber Temperature - TH0
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: gpio27
min_temp: 0
max_temp: 100
gcode_id: chamber_th

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[include homing.cfg] # Must be placed before klicky-probe.cfg

[idle_timeout]
# Modified to not disable steppers (M84) on idle
gcode:
    M104 S0 #TURN_OFF_HEATERS
    {% if not (printer.idle_timeout.state|upper == "PRINTING" or printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) %}
        M84
    {% endif %}
timeout: 1800

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

## Use SCREWS_TILT_CALCULATE to perform assisted leveling
[include ./Klicky-Probe/klicky-probe.cfg] # Must be placed after homing.cfg
[include ./Klicky-Probe/klicky-specific.cfg]                #place to put other configurations specific to your printer
[include ./Klicky-Probe/klicky-variables.cfg]                #Required
[include ./Klicky-Probe/klicky-macros.cfg]                   #Required
# [include ./Klicky-Probe/klicky-bed-mesh-calibrate.cfg]      #bed mesh, requires klipper configuration
[include ./Klicky-Probe/klicky-screws-tilt-calculate.cfg]   #help adjust bed screws automatically
#[include ./Klicky-Probe/klicky-quad-gantry-level.cfg]       #level 4 Z motors
#[include ./Klicky-Probe/klicky-z-tilt-adjust.cfg]           #level 2 or 3 Z motors

#####################################################################
#   Input Shaper
#####################################################################

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 20
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0

[include shaketune.cfg]

#####################################################################
#   LDO Nitehawk
#####################################################################
[include nitehawk-36.cfg]

#####################################################################
#   Macros
#####################################################################

[delayed_gcode machine_startup]
initial_duration: 1
gcode:
    NW_RETRACT
    M300 P800

[include auto_pid.cfg]
[include heat_soak.cfg]
[include status-macros.cfg]
[include nozzlewiper.cfg]

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script
gcode:
    {% set max_chamber_temp = printer["gcode_macro HEAT_SOAK"].max_chamber_temp|default(60)|int %}
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = [([(params.CHAMBER|default(20)|int), target_bed//2]|max), max_chamber_temp]|min %}

    SET_GCODE_OFFSET Z=0                                 # Set offset to 0
    SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={printer.configfile.settings.extruder.pressure_advance|default(0.04)|float}
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}

    M300 P400 ; beep

    # Homes the printer and sets absolute positioning
    G28                   # Full home (XYZ)
    G90                   # Absolute position

    M106 S255                                           # Turns on the PT-fan

    CENTER                                              # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed

    # Check if the bed temp is higher than 70c - if so then trigger a heatsoak.
    {% if (target_bed + 1) > 70 %}
        HEAT_SOAK DURATION=10 CHAMBER={target_chamber}  # Waits 10 min for the bedtemp to stabilize

    # If the bed temp is not over 70c, then skip the heatsoak and just heat up to set temp with a 5 min soak
    {% else %}
        HEAT_SOAK DURATION=5                            # Waits 5 min for the bedtemp to stabilize

    {% endif %}

    # Heats to the nozzle to print temp to perform purge and scrub
    M109 S{target_extruder}                                 # Heats the nozzle to printing temp
    NW_CLEAN_NOZZLE                                         # Purge & scrub nozzle

    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    M109 S150                                               # Heats the nozzle to 150c

    G28 Z                                                   # Re-home Z to account for thermal expansion

    # Heats up the nozzle up to target via data from slicer
    SMART_PARK
    M107                                                    # Turns off the PT-fan
    M109 S{target_extruder}                                 # Heats the nozzle to your print temp

    M300 S440 P200
    M300 S660 P250
    M300 S880 P300

    LINE_PURGE                                              # Purge nozzle
    # VORON_PURGE
    G11

    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

    STATUS_PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z - 2]|min %}
    {% set z_park = [th.position.z + (th.axis_maximum.z//2), th.axis_maximum.z - 2]|min %}

    M220 S100
    SET_PRESSURE_ADVANCE EXTRUDER=extruder ADVANCE={printer.configfile.settings.extruder.pressure_advance|default(0.04)|float}
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                                     ; wait for buffer to clear
    STATUS_BUSY
    G92 E0                                   ; zero the extruder
    _CONDITIONAL_RETRACT                     ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x - 10} Y{th.axis_maximum.y - 10} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for moves to finish

    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

    G0 Z{z_park} F20000                      ; park high above the bed

    UPDATE_DELAYED_GCODE ID=notify_bed_cooled DURATION=10
    UPDATE_DELAYED_GCODE ID=delayed_save_config DURATION=60
    UPDATE_DELAYED_GCODE ID=delayed_shutdown DURATION=90

[gcode_macro LOAD_FILAMENT] # Expected by mainsail & KlipperScreen
description: Loads new filament into toolhead
variable_load_distance:  60
variable_purge_distance:  100
gcode:
    M300 P200
    {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}
    {% set motion_sensor_enabled = printer["filament_motion_sensor encoder_sensor"].enabled %}
    SAVE_GCODE_STATE NAME=load_state
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if params.PARK|default(1)|int %}
        M104 S{extruder_temp}
        _TOOLHEAD_PARK_LOAD_UNLOAD
    {% endif %}
    M109 S{extruder_temp}          ; set extruder temperature and wait until it reaches loading temperature
    M400                           ; wait for buffer to clear
    STATUS_BUSY
    M117 Loading Filament...
    M83                            ; set extruder to relative
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    G92 E0
    M400                           ; wait for moves to finish
    RESET_STATUS
    M117 Load Complete!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_CONDITIONAL_UNRETRACT VARIABLE=needs_unretract VALUE=False
    M300 P400 # long beep
    RESTORE_GCODE_STATE NAME=load_state MOVE={1 if (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) else 0}

[gcode_macro UNLOAD_FILAMENT] # Expected by mainsail & KlipperScreen
description: Unloads filament from toolhead
variable_unload_distance:  60 # Do not exceed 70mm, otherwise the warm filament will clog the extruder wheel
variable_purge_distance:  10
gcode:
    M300 P200
    {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
    {% set unload_temp = printer.configfile.settings['extruder'].min_extrude_temp|int + 5 %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}
    {% set motion_sensor_enabled = printer["filament_motion_sensor encoder_sensor"].enabled %}
    SAVE_GCODE_STATE NAME=unload_state
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if params.PARK|default(1)|int %}
        M104 S{extruder_temp}
        _TOOLHEAD_PARK_LOAD_UNLOAD
    {% endif %}
    M109 S{extruder_temp}          ; set extruder temperature and wait until it reaches loading temperature
    M400                           ; wait for buffer to clear
    STATUS_BUSY
    M117 Unloading Filament...
    M83                            ; set extruder to relative
    G92 E0
    M104 S{unload_temp}
    G1 E{purge_distance} F{speed} # purge
    M106 S255
    G1 E-{unload_distance} F{max_velocity} # quickly retract to elimate stringing
    G92 E0
    M104 S{extruder_temp}
    M400                           ; wait for moves to finish
    RESET_STATUS
    M117 Unload Complete!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_CONDITIONAL_UNRETRACT VARIABLE=needs_unretract VALUE=True
    M300 P400 # long beep
    RESTORE_GCODE_STATE NAME=unload_state MOVE={1 if (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) else 0}

[gcode_macro PURGE_FILAMENT] # Expected by mainsail
description: Purge filament in a safe location
variable_purge_distance:  100
gcode:
    M300 P200
    {% set min_temp = printer.configfile.settings['extruder'].min_extrude_temp|int + 5 %}
    {% set extruder_temp = params.TEMP|default([min_temp, printer.extruder.target]|max)|int %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set motion_sensor_enabled = printer["filament_motion_sensor encoder_sensor"].enabled %}
    SAVE_GCODE_STATE NAME=load_state
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    {% if params.PARK|default(1)|int %}
        M104 S{extruder_temp}
        _TOOLHEAD_PARK_PURGE
    {% endif %}
    M109 S{extruder_temp}          ; set extruder temperature and wait until it reaches loading temperature
    M400                           ; wait for buffer to clear
    STATUS_BUSY
    M117 Purging Filament...
    M83                            ; set extruder to relative
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G92 E0
    M400                           ; wait for moves to finish
    RESET_STATUS
    M117 Purge Complete!
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_CONDITIONAL_UNRETRACT VARIABLE=needs_unretract VALUE=False
    M300 P400 # long beep
    RESTORE_GCODE_STATE NAME=load_state MOVE={1 if (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) else 0}

# [gcode_macro M600]
# description: Filament change
# gcode:
#     {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
#     {% set y_front = printer.toolhead.axis_minimum.y|float + 10 %}
#     PAUSE X={x_center} Y={y_front} Z_MIN=50
#     # Z_MIN will park the toolhead at a minimum of 50 mm above to bed to make it easier for you to swap filament.

[gcode_macro _CONDITIONAL_UNRETRACT]
variable_needs_unretract: True
gcode:
    ##### get user parameters or use default #####
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}
    ##### end of definitions #####
    {% if needs_unretract and printer[printer.toolhead.extruder].can_extrude %}
        _CLIENT_EXTRUDE LENGTH={length}
        SET_GCODE_VARIABLE MACRO=_KAMP_Settings VARIABLE=tip_distance VALUE=0
        SET_GCODE_VARIABLE MACRO=_CONDITIONAL_UNRETRACT VARIABLE=needs_unretract VALUE=False
    {% endif %}

[gcode_macro _CONDITIONAL_RETRACT]
gcode:
    ##### get user parameters or use default #####
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}
    ##### end of definitions #####
    {% if printer[printer.toolhead.extruder].can_extrude %}
        _CLIENT_RETRACT LENGTH={length}
        SET_GCODE_VARIABLE MACRO=_KAMP_Settings VARIABLE=tip_distance VALUE={length}
        SET_GCODE_VARIABLE MACRO=_CONDITIONAL_UNRETRACT VARIABLE=needs_unretract VALUE=True
    {% endif %}

[gcode_macro _DEEP_CLEAN_NOZZLE]
description: Scrubs the nozzle repeatedly while gradually stepping down the nozzle temperature
variable_temp_step: 20 #10
variable_min_temp_step: 10 #5
gcode:
    {% set extruder_temp = params.TEMP|default([230, printer.extruder.target]|max)|int %}
    {% set loop_target = extruder_temp - min_temp_step %}
    {% set loop_start_temp = loop_target - (loop_target % temp_step) %}
    {% for clean_temp in range(loop_start_temp, 160, -temp_step) %} #199
        M109 S{clean_temp}
        NW_CLEAN_NOZZLE                                 # Scrub nozzle
        G28 Z
    {% endfor %}

[gcode_macro _TOOLHEAD_PARK_LOAD_UNLOAD]
gcode:
    {% if not (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) %}
        _TOOLHEAD_PARK_Z
        FRONT SPEED=18000              ; move the toolhead to the front
    {% endif %}

[gcode_macro _TOOLHEAD_PARK_PURGE]
gcode:
    {% if not (printer.pause_resume.is_paused or printer.virtual_sdcard.is_active) %}
        {% set y_front = printer.toolhead.axis_minimum.y|float + 10 %}
        _TOOLHEAD_PARK_Z
        G1 X10 Y{y_front} F18000
    {% endif %}

[gcode_macro _TOOLHEAD_PARK_Z]
gcode:
    {% set extruder_temp = printer.extruder.target|int %}
    CHOME
    M104 S{extruder_temp}
    G90
    G1 Z90 F18000

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    M106 S255
    G28
  {% endif %}

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_front = printer.toolhead.axis_minimum.y|float + 10 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 X{x_center} Y{y_front} F{travel_speed}

[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 X{x_center} Y{x_center} F{travel_speed}

[gcode_macro REAR]
description: Moves the toolhead to the rear
gcode:
  CHOME
  {% set x_rear = printer.toolhead.axis_maximum.x|float - 10 %}
  {% set y_rear = printer.toolhead.axis_maximum.y|float - 10 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 X{x_rear} Y{y_rear} F{travel_speed}

[gcode_macro TOP]
description: Moves the toolhead to the top
gcode:
  CHOME
  {% set z_top = printer.toolhead.axis_maximum.z|float - 10 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 Z{z_top} F{travel_speed}

[gcode_macro MIDDLE]
description: Moves the toolhead to the middle
gcode:
  CHOME
  {% set z_middle = printer.toolhead.axis_maximum.z|float / 2.0 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 Z{z_middle} F{travel_speed}

[gcode_macro BOTTOM]
description: Moves the toolhead to the bottom
gcode:
  CHOME
  {% set z_bottom = printer.toolhead.axis_minimum.z|float + 10 %}
  {% set travel_speed = params.SPEED|default(printer.toolhead.max_velocity|int * 60)|int %}
  G90
  G1 Z{z_bottom} F{travel_speed}

[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

[delayed_gcode DISABLE_FILAMENT_SENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[delayed_gcode save_config]
gcode:
    SAVE_CONFIG

#####################################################################
#   Override existing macros with new features
#####################################################################

[include rename_existing.cfg]

#####################################################################
#   Optional G-Code features
#####################################################################

[firmware_retraction]
retract_length: 0.2 # The default is 0 mm.
retract_speed: 30 # The default is 20 mm/s.
#unretract_extra_length: 0
unretract_speed: 30 # The default is 10 mm/s.

[force_move]
enable_force_move: True # Enable FORCE_MOVE and SET_KINEMATIC_POSITION extended G-Code commands

[gcode_arcs] # Enable support for gcode arc (G2/G3) commands

[respond] # Enable the "M118" and "RESPOND" extended commands.

[exclude_object] # Enable exclude_object module in Klipper

#####################################################################
#   Mailsail Customization
#####################################################################

# Client variable macro for your printer.cfg
# See mainsail.cfg for details
[gcode_macro _CLIENT_VARIABLE]
# variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 5.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 5.0   ; custom y position; value must be within your defined min and max of Y
# variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 30.0  ; the value to retract while PAUSE
# variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
# variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 30.0  ; the value to unretract while RESUME
# variable_speed_unretract  : 35.0  ; unretract speed in mm/s
# variable_speed_hop        : 15.0  ; z move speed in mm/s
# variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
# variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
# variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor switch_sensor" ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
#                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
# !!! Custom macros, please use with care and review the section of the corresponding macro.
# These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
# Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : "_AFTER_PAUSE"  ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: "_BEFORE_RESUME"  ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: "_BEFORE_CANCEL"  ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[gcode_macro _AFTER_PAUSE]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    M300 S660 P200
    M300 S440 P250
    M300 S880 P300

[gcode_macro _BEFORE_RESUME]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=1

[gcode_macro _BEFORE_CANCEL]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

#####################################################################
#   Speed & Acceleration Testing
#####################################################################

[include TEST_SPEED.cfg]
[include SETTLE_BELT_TENSION.cfg]

#####################################################################
#   Machine Shutdown
#####################################################################

[include shutdown.cfg]

#####################################################################
#   Auto Save Config
#####################################################################

[include save_config.cfg]

#####################################################################
#   Klipper Adaptive Meshing & Purging
#####################################################################

[include KAMP_Settings.cfg]
#[include ./KAMP/Adaptive_Meshing.cfg]       # Include to enable adaptive meshing configuration.
[include ./KAMP/Line_Purge.cfg]             # Include to enable adaptive line purging configuration.
#[include ./KAMP/Voron_Purge.cfg]            # Include to enable adaptive Voron logo purging configuration.
[include ./KAMP/Smart_Park.cfg]             # Include to enable the Smart Park function, which parks the printhead near the print area for final heating.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.988
#*# pid_ki = 3.520
#*# pid_kd = 55.628
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.964
#*# pid_ki = 1.031
#*# pid_kd = 1153.429
#*#
#*# [probe]
#*# z_offset = 13.560
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 78.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 52.6
